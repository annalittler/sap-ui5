<mvc:View
  xmlns="sap.m"
  xmlns:mvc="sap.ui.core.mvc"
  xmlns:m="sap.m"
  xmlns:f="sap.f"
  xmlns:l="sap.ui.layout"
  xmlns:core="sap.ui.core"
  controllerName="sap.ui.demo.walkthrough.controller.Review"
  xmlns:html="http://www.w3.org/1999/xhtml"
>
  <Shell showLogout="false" appWidthLimited="false">
    <App>
      <pages>
        <Page title="{i18n>homePageTitle}">
          <customHeader design="Solid">
            <f:ShellBar title="{i18n>appTitle}" showNavButton="false">
              <f:profile>
                <Avatar initials="AL" />
              </f:profile>
            </f:ShellBar>
          </customHeader>
          <content>


            <OverflowToolbar contentWidth="200px">
              <Button icon="sap-icon://nav-back" press=".onNavBackOne" type="Transparent"></Button>
              <Label text="{= ${tableData>/articles}.length} Article(s)"></Label>
              <ToolbarSpacer />
              <Button icon="sap-icon://multi-select" id="idMultiSelectBtn" press=".onDeleteMenu" type="Transparent"></Button>
              <Button icon="sap-icon://sys-cancel-2" id="idMultiSelectCancel" press=".onDeleteMenu" visible="false" type="Transparent"></Button>
              <Button icon="sap-icon://list" text="Save List" type="Transparent">
                <layoutData>
                  <OverflowToolbarLayoutData priority="AlwaysOverflow" />
                </layoutData>
              </Button>
              <Button icon="sap-icon://email" text="Email List" type="Transparent">
                <layoutData>
                  <OverflowToolbarLayoutData priority="AlwaysOverflow" />
                </layoutData>
              </Button>
              <Button icon="sap-icon://print" text="Quick Print" type="Transparent">
                <layoutData>
                  <OverflowToolbarLayoutData priority="AlwaysOverflow" />
                </layoutData>
              </Button>
              <Button icon="sap-icon://action-settings" text="Settings" press=".onSettingsPopup" type="Transparent">
                <layoutData>
                  <OverflowToolbarLayoutData priority="AlwaysOverflow" />
                </layoutData>
              </Button>
            </OverflowToolbar>


            <List id="listItems" growing="true" growingThreshold="5" selectionChange=".onSelectionChange" items="{
        path: 'tableData>/articles',
                  sorter: {
                    path: 'aisle',
                    group: '.getGroup'
                  },
                  groupHeaderFactory: '.getGroupHeader'
                }">
              <swipeContent>
                <Button
                  icon="sap-icon://delete"
                  type="Negative"
                  press=".onDeleteItem" />
              </swipeContent>
              <items>
                <CustomListItem id="idListItem" type="Navigation" press=".onClickItem">
                  <HBox id="idListHBox" class="" width="98%">
                    <HBox justifyContent="Center" alignItems="Center" class="sapUiSmallMarginEnd">
                      <Image src="{tableData>image}" height="50px" press=".onImgPress" visible="{= ${tableData>/showImgs/status} === true ? true : false }" />
                    </HBox>
                    <VBox class="SapUiLargeMargin" width="100%">
                      <HBox justifyContent="SpaceBetween">
                        <Title text="{tableData>name} {tableData>qty}" wrapping="true" class="sapUiSmallMarginTop" />
                      </HBox>
                      <VBox>
                        <ObjectAttribute title="Article" text="{tableData>articleNo}" />
                        <ObjectAttribute title="Next delivery" text="{tableData>delivery}" />
                        <HBox justifyContent="SpaceBetween" alignItems="Center" class="sapUiSmallMarginEnd">
                          <ObjectStatus class="" text="{= ${tableData>soh} > 0 ? 'SOH: ' + ${path: 'tableData>soh', type: 'sap.ui.model.type.Integer'} : 'S0H: 0' }" state="{=${tableData>soh} > 10 ? 'Success' : (${tableData>soh} === 0 ? 'Error' : 'Warning')}"></ObjectStatus>
                          <Switch id="idListGapSwitch" customTextOff="Gap" change=".listGapSwitch" customTextOn="Gap" state="{tableData>isGap}"></Switch>

                        </HBox>
                      </VBox>
                    </VBox>
                  </HBox>
                </CustomListItem>
              </items>
            </List>
          </content>
          <footer>
            <Toolbar design="Solid" enabled="true" visible="true" width="100%">
              <Button text="End Scanning" id="closeBtn" visible="false" press=".onStopScan" />
              <ToolbarSpacer />
              <Button id="idButtonExport" type="Emphasized" text="Submit List" press=".onExportPress" width="100px" />
              <Button id="idButtonExportMulti" type="Emphasized" text="Submit ({= ${tableData>/selectedItems}.length})" press=".onExportMultiPress" visible="false" width="100px" />
              <Button id="idButtonDelete" type="Ghost" text="Delete List" press=".onDeleteList" ariaHasPopup="Dialog" width="100px" />
              <Button id="idButtonDeleteMulti" type="Ghost" text="Delete ({= ${tableData>/selectedItems}.length})" press=".onDeleteMulti" ariaHasPopup="Dialog" visible="false" width="100px" />

            </Toolbar>
          </footer>
        </Page>
      </pages>
    </App>
  </Shell>
</mvc:View>
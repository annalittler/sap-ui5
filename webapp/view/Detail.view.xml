<mvc:View xmlns:core="sap.ui.core" xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m"
    controllerName="sap.ui.demo.walkthrough.controller.Detail"
    xmlns:html="http://www.w3.org/1999/xhtml" xmlns:f="sap.f"
>

    <Page title="{tableData>name}" id="idDetail" showFooter="true" showNavButton="true" navButtonPress=".onNavBack">

        <content>
            <HBox alignItems="Center" backgroundDesign="Solid">
                <VBox class="sapUiContentPadding" width="20%" alignItems="Center">
                    <Image src="{tableData>image}" width="75px" press=".onImgPress" />
                </VBox>
                <VBox width="80%" class="sapUiContentPadding">
                    <HBox>
                        <Title text="{tableData>name}"></Title>
                    </HBox>
                    <HBox class="sapUiTinyMarginTop">
                        <ObjectAttribute text="Article: {tableData>articleNo}"></ObjectAttribute>
                    </HBox>
                    <HBox>
                        <ObjectAttribute text="Barcode: {tableData>barcode}"></ObjectAttribute>
                    </HBox>
                    <HBox justifyContent="SpaceBetween" class="sapUiTinyMarginTop">
                        <ObjectAttribute text="SOH: {tableData>soh}"></ObjectAttribute>
                        <!-- <ObjectAttribute text="{= ${tableData>soh > 10 ? 'In Stock' : 'Out of Stock'} }"></ObjectAttribute> -->
                    </HBox>
                    <HBox alignItems="Center" justifyContent="SpaceBetween">
                        <ObjectStatus state="{=${tableData>soh} > 10 ? 'Success' : (${tableData>soh} === 0 ? 'Error' : 'Warning')}" icon="{=${tableData>soh} > 10 ? 'sap-icon://message-success' : (${tableData>soh} === 0 ? 'sap-icon://message-error' : 'sap-icon://message-warning')}" text="{=${tableData>soh} > 10 ? 'In Stock' : (${tableData>soh} === 0 ? 'Out of Stock' : 'Low Stock')}"
                        />
                        <!-- <ObjectAttribute text="{ parts: ['json>/name', 'json>/nr'], formatter: '.Formatter.inStockCondition'}"></ObjectAttribute> -->
                        <!-- <Icon src="{= ${propertyname} === 'UP' ? 'sap-icon://arrow-top' : ${propertyname} === 'DOWN' ? 'sap-icon://arrow-bottom' : 'sap-icon://arrow-left'}" /> -->
                        <CheckBox id="emptyCheckbox" text="Empty Shelf?" select=".onEmptyShelfCheckChange" selected="{= ${tableData>/emptyShelvesAutoTag/status} === true ? true : false}"></CheckBox>
                        <!-- <CheckBox id="emptyCheckbox" text="{emptyShelvesTag>/status}" select=".onCheckboxChange"></CheckBox> -->
                    </HBox>
                    <HBox justifyContent="SpaceBetween">
                        <ObjectAttribute text="Next delivery:
                        {tableData>delivery}"></ObjectAttribute>
                        <VBox>
                            <ObjectAttribute text="Pres Stock: {tableData>presStock}"></ObjectAttribute>
                            <Link text="Update" press=".onUpdatePresStock" ariaHasPopup="Dialog"></Link>
                        </VBox>
                    </HBox>
                </VBox>
            </HBox>
            <VBox class="sapUiSmallMargin">

                <Text text="Please select action(s)" class="sapUiTinyMarginTopBottom"></Text>
                <CustomListItem id="replenClItem" class="" blocked="{=${tableData>soh} === 0 ? true : false}">
                    <CheckBox id="replenShelfCheck" text="Replenish Shelf" select=".onReplenShelfCheck" editable="{=${tableData>soh} === 0 ? false : true}" state="{{=${tableData>soh} === 0 ? 'Error' : 'None'}}"></CheckBox>
                </CustomListItem>
                <VBox width="100%" visible="{= ${tableData>/replenShelfCheck/status} === true ? true : false}">
                    <Toolbar width="100%" height="1px" />
                    <Text class="sapUiTinyMarginTopBottom" text="Select replenishment mode"></Text>
                    <RadioButton text="Request Quantity" select=".onReqQuantitySelect" selected="true"></RadioButton>
                    <RadioButton id="stockOnShelfRadio" text="Enter Stock on Shelf" select=".onStockOnShelfSelect"></RadioButton>
                    <StepInput id="reqQuantityStepInput" visible="{= ${tableData>/reqQuantitySelect/status} === true ? true : false}" min="0" max="{tableData>soh}" change=".onReqQuantityInputChange"></StepInput>
                    <StepInput id="stockOnShelfStepInput" visible="{= ${tableData>/stockOnShelfSelect/status} === true ? true : false}" min="0" change=".onStockOnShelfChange" editable="{= ${tableData>/isShelfEmpty/status === true ? false : true}}"></StepInput>
                </VBox>
                <CustomListItem id="reportClItem">
                    <CheckBox id="reportBtlCheck" text="Report to Buyer's Task List" select=".onReportBtlCheck"></CheckBox>
                </CustomListItem>
                <!-- <Text text="hello world" visible="{formatter: '.replenishShelf'}"></Text> -->
                <!-- <Text text="hello world" visible=""></Text> -->
            </VBox>

            <!-- <VBox class="sapUiContentPadding sapUiSmallMargin sapUiMediumMarginBeginEnd">
                <HBox justifyContent="SpaceBetween">
                    <Text text="PRESENTATION STOCK: {tableData>presStock}"></Text>
                    <Text text="SOH: {tableData>soh}"></Text>
                </HBox>
                <RadioButtonGroup>
                    <RadioButton id="idRadioFullShelf" text="Replenish Full Shelf" selected="{= ${presStock} > 0 ? false : true }" editable="{= ${RequestType} !== 'IC' ? true : false }" />
                    <RadioButton id="idRadioExactQuantity" text="Replenish Exact Quantity" selected="{= ${RequestType} === 'EQ' ? true : false }" editable="{= ${RequestType} !== 'IC' ? true : false }" />
                    <RadioButton id="idRadioInvController" text="Report to Inventory Controller" selected="{= ${RequestType} === 'IC' ? true : false }" editable="false" />
                </RadioButtonGroup>
                <Label text="Presentation Stock" class="sapUiSmallMarginTop" />
                <StepInput value="{PresentationStock}" min="0" step="1" />
            </VBox> -->

        </content>


        <footer>
            <Toolbar design="Solid" enabled="true" visible="true" width="100%">
                <ToolbarSpacer />
                <!-- <Text text="Images: "></Text>
              <Switch state="false" customTextOn="On" customTextOff="Off" change=".onShowImages" /> -->
                <Button id="idButtonSubmitItem" type="Emphasized" text="Submit" press=".onSubmitItem" />
            </Toolbar>
        </footer>
    </Page>
</mvc:View>